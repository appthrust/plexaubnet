apiVersion: batch/v1
kind: Job
metadata:
  name: k6-loadtest
  labels:
    app: k6-loadtest
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 5400  # 90 minutes (maximum execution time)
  template:
    metadata:
      labels:
        app: k6-loadtest
    spec:
      serviceAccountName: k6-loadtest
      restartPolicy: Never
      initContainers:
      # Script preparation container
      - name: prepare-scripts
        image: busybox:1.36
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Preparing k6 test scripts..."
          mkdir -p /scripts-processed
          
          # Copy from ConfigMap and process
          cp /scripts/* /scripts-processed/
          
          # Replace environment variables
          sed -i "s|__ENV.DURATION__|'${DURATION}'|g" /scripts-processed/*.js
          
          # RPS settings for each test type
          # Process patterns with spaces using regex
          sed -i "s/__ENV\.MAX_RPS_SUBNET[[:space:]]*||[[:space:]]*50/${MAX_RPS_SUBNET:-50}/g" /scripts-processed/subnet.js
          sed -i "s/__ENV\.MAX_RPS_POOL[[:space:]]*||[[:space:]]*2/${MAX_RPS_POOL:-2}/g" /scripts-processed/subnetpool.js
          sed -i "s/__ENV\.MAX_RPS_CLAIM[[:space:]]*||[[:space:]]*20/${MAX_RPS_CLAIM:-20}/g" /scripts-processed/subnetclaim.js
          sed -i "s/__ENV\.MAX_RPS_CLAIM[[:space:]]*||[[:space:]]*20/${MAX_RPS_CLAIM:-20}/g" /scripts-processed/subnetpoolclaim.js
          
          echo "Scripts prepared successfully:"
          echo "DURATION=${DURATION}"
          echo "SUBNET RPS=${MAX_RPS_SUBNET:-50}"
          echo "POOL RPS=${MAX_RPS_POOL:-2}"
          echo "CLAIM RPS=${MAX_RPS_CLAIM:-20}"
        env:
        - name: DURATION
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: duration
              optional: true
        - name: MAX_RPS_SUBNET
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsSubnet
              optional: true
        - name: MAX_RPS_POOL
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsPool
              optional: true
        - name: MAX_RPS_CLAIM
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsClaim
              optional: true
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: scripts-processed
          mountPath: /scripts-processed
      containers:
      # SubnetPool creation test - low RPS (default: 2 RPS)
      - name: k6-subnetpool
        image: grafana/k6:0.52.0
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "======= Running SubnetPool Load Test ======="
          echo "Starting with MAX_RPS_POOL=${MAX_RPS_POOL:-2}, DURATION=${DURATION}"
          k6 run \
            --out json=/outputs/subnetpool-metrics.json \
            --tag testtype=subnetpool \
            --env API_BASE=${API_BASE} \
            --env NAMESPACE=${NAMESPACE} \
            --env DURATION=${DURATION} \
            --env MAX_RPS_POOL=${MAX_RPS_POOL:-2} \
            /scripts-processed/subnetpool.js
        env:
        - name: K6_API_PORT
          value: "0"
        - name: API_BASE
          value: "https://kubernetes.default.svc"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DURATION
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: duration
              optional: true
        - name: MAX_RPS_POOL
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsPool
              optional: true
        volumeMounts:
        - name: scripts-processed
          mountPath: /scripts-processed
        - name: outputs
          mountPath: /outputs
          
      # SubnetClaim & Pool creation test - medium RPS (default: 20 RPS)
      - name: k6-subnetclaim
        image: grafana/k6:0.52.0
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "======= Running SubnetClaim with Pool Creation Test ======="
          echo "Starting with MAX_RPS_CLAIM=${MAX_RPS_CLAIM:-20}, DURATION=${DURATION}"
          k6 run \
            --out json=/outputs/subnetclaim-metrics.json \
            --tag testtype=subnetclaim \
            --env API_BASE=${API_BASE} \
            --env NAMESPACE=${NAMESPACE} \
            --env DURATION=${DURATION} \
            --env MAX_RPS_CLAIM=${MAX_RPS_CLAIM:-20} \
            /scripts-processed/subnetclaim.js
        env:
        - name: K6_API_PORT
          value: "0"
        - name: API_BASE
          value: "https://kubernetes.default.svc"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DURATION
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: duration
              optional: true
        - name: MAX_RPS_CLAIM
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsClaim
              optional: true
        volumeMounts:
        - name: scripts-processed
          mountPath: /scripts-processed
        - name: outputs
          mountPath: /outputs
        
      # SubnetPoolClaim test - medium RPS (default: 20 RPS)
      - name: k6-subnetpoolclaim
        image: grafana/k6:0.52.0
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "======= Running SubnetPoolClaim Load Test ======="
          echo "Starting with MAX_RPS_CLAIM=${MAX_RPS_CLAIM:-20}, DURATION=${DURATION}"
          # Wait 10 seconds - to let other containers start first
          echo "Waiting 10s for other containers to start..."
          sleep 10
          k6 run \
            --out json=/outputs/subnetpoolclaim-metrics.json \
            --tag testtype=poolclaim \
            --env API_BASE=${API_BASE} \
            --env NAMESPACE=${NAMESPACE} \
            --env POOL_NAME=${POOL_NAME} \
            --env DURATION=${DURATION} \
            --env MAX_RPS_CLAIM=${MAX_RPS_CLAIM:-20} \
            /scripts-processed/subnetpoolclaim.js
        env:
        - name: K6_API_PORT
          value: "0"
        - name: API_BASE
          value: "https://kubernetes.default.svc"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DURATION
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: duration
              optional: true
        - name: POOL_NAME
          value: "pool-for-claim-load"
        - name: MAX_RPS_CLAIM
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsClaim
              optional: true
        volumeMounts:
        - name: scripts-processed
          mountPath: /scripts-processed
        - name: outputs
          mountPath: /outputs
          
      # Subnet CRUD test - standard RPS (default: 50 RPS)
      - name: k6-subnet
        image: grafana/k6:0.52.0
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "======= Running Subnet CRUD Load Test ======="
          echo "Starting with MAX_RPS_SUBNET=${MAX_RPS_SUBNET:-50}, DURATION=${DURATION}"
          # Wait 20 seconds - to let other containers start first
          echo "Waiting 20s for other containers to start..."
          sleep 20
          k6 run \
            --out json=/outputs/subnet-metrics.json \
            --tag testtype=subnet \
            --env API_BASE=${API_BASE} \
            --env NAMESPACE=${NAMESPACE} \
            --env DURATION=${DURATION} \
            --env MAX_RPS_SUBNET=${MAX_RPS_SUBNET:-50} \
            /scripts-processed/subnet.js
        env:
        - name: K6_API_PORT
          value: "0"
        - name: API_BASE
          value: "https://kubernetes.default.svc"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DURATION
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: duration
              optional: true
        - name: MAX_RPS_SUBNET
          valueFrom:
            configMapKeyRef:
              name: k6-loadtest-config
              key: maxRpsSubnet
              optional: true
        volumeMounts:
        - name: scripts-processed
          mountPath: /scripts-processed
        - name: outputs
          mountPath: /outputs
      
      volumes:
      - name: scripts
        configMap:
          name: k6-scripts
      - name: scripts-processed
        emptyDir: {}
      - name: outputs
        emptyDir: {}